module main (
    input clk,
    input rst,
    input btn,
    output score[][],
    output board[][]
) {
     
    const INIT_GAME = 12b001001110100;
    const INIT_HINT = 12b011010111001;
    const MASK[12][12] = c{12b110010000000, 12b111001000000, 12b011100100000, 12b001100010000, 12b100011001000, 12b010011100100, 12b001001110010, 12b000100110001, 12b000010001100, 12b000001001110, 12b000000100111, 12b000000010011};
    sig game[12];
    sig hint[12];
    sig move;
    sig step;

    board_updater my_updater;

    .clk(clk) {
        .rst(rst) {
            fsm state = {INIT, PLAY, FIN};
        }
    }

    always {

        game = game;
        hint = hint;

        case (state.q) {
            state.INIT:
                // initialize board, hint and step counter
                game = INIT_GAME;
                hint = INIT_HINT;
                my_updater.mask = MASK;
                my_updater.game = game;
                my_updater.hint = hint;
                step = 0;
                state.d = state.PLAY;

            state.PLAY:
                // read move
                move = my_button.getmove;
                // update board, hint and step
                step = step + 1;
                my_updater.move = move;
                my_updater.game = game;
                my_updater.hint = hint;
                game = my_updater.new_game;
                hint = my_updater.new_hint;
                // see if game is solved
                if (hint == 0) {
                    state.d = state.FIN;
                }

            state.FIN:
                // waiting for restart
                // display congratulation msg
                if (restartGame) {
                    state.d = state.INIT;
                }
        }

    }

}
