module main (
    input clk,
    input rst,
    input btn,
    output pina[12], // for led matrix
    output pinb[12], // for led matrix
    output pinc[4], // for keypad
    input pind[4] // for keypad
) {
     
    const INIT_GAME = 12b001001110100;
    const INIT_HINT = 12b011010111001;
    const MASK[12][12] = c{12b110010000000, 12b111001000000, 12b011100100000, 12b001100010000, 12b100011001000, 12b010011100100, 12b001001110010, 12b000100110001, 12b000010001100, 12b000001001110, 12b000000100111, 12b000000010011};
    dff game[12](.clk(clk), .rst(rst));
    dff hint[12](.clk(clk), .rst(rst));
    dff move(.clk(clk), .rst(rst));
    dff step(.clk(clk), .rst(rst));

    board_updater my_updater;
    my_led led_matrixcontroller;

    .clk(clk) {
        .rst(rst) {
            fsm state = {INIT, PLAY, FIN};
            counter ctr (#SIZE(6),#TOP(63),#DIV(24));
        }
    }


    always {

        // stupid code, exclusively for retarded Mojo
        my_updater.mask = MASK;
        my_updater.hint = hint.q;
        my_updater.move = 42;
        my_updater.game = game.q;

        case (state.q) {
            state.INIT:
                // initialize board, hint and step counter
                game.d = INIT_GAME;
                hint.d = INIT_HINT;
                move.d = 42;
                my_updater.hint = INIT_HINT;
                my_updater.move = 42;
                my_updater.game = INIT_GAME;
                step.d = 0;
                state.d = state.PLAY;

            state.PLAY:
                // read move
                move.d = my_button.getmove;
                // update board, hint and step
                step.d = step.q + 1;
                my_updater.hint = hint.q;
                my_updater.move = move.q;
                my_updater.game = game.q;
                game.d = my_updater.new_game;
                hint.d = my_updater.new_hint;
                my_led.


                // see if game is solved
                if (my_updater.new_hint == 0) {
                    state.d = state.FIN;
                }

            state.FIN:
                // waiting for restart
                // display congratulation msg
                if (my_button.restartGame == 1) {
                    state.d = state.INIT;
                }

        }

    }

}
