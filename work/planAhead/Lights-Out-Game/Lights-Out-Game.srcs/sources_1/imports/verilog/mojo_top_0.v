/*
   This file was generated automatically by the Mojo IDE version B1.3.5.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module main_0 (
    input clk,
    input rst,
    output reg [11:0] pina,
    output reg [11:0] pinb,
    input [3:0] pinc,
    output reg [3:0] pind
  );
  
  
  
  localparam INIT_GAME = 12'h274;
  
  localparam INIT_HINT = 12'h6b9;
  
  reg [143:0] mask;
  
  reg [11:0] M_game_d, M_game_q = 1'h0;
  
  reg [11:0] M_hint_d, M_hint_q = 1'h0;
  
  reg M_move_d, M_move_q = 1'h0;
  
  reg M_step_d, M_step_q = 1'h0;
  
  wire [12-1:0] M_my_updater_new_game;
  wire [12-1:0] M_my_updater_new_hint;
  reg [1-1:0] M_my_updater_move;
  reg [12-1:0] M_my_updater_game;
  reg [12-1:0] M_my_updater_hint;
  reg [144-1:0] M_my_updater_mask;
  board_updater_1 my_updater (
    .move(M_my_updater_move),
    .game(M_my_updater_game),
    .hint(M_my_updater_hint),
    .mask(M_my_updater_mask),
    .new_game(M_my_updater_new_game),
    .new_hint(M_my_updater_new_hint)
  );
  
  wire [12-1:0] M_my_led_pina;
  wire [12-1:0] M_my_led_pinb;
  reg [12-1:0] M_my_led_game;
  reg [12-1:0] M_my_led_hint;
  reg [1-1:0] M_my_led_step;
  reg [6-1:0] M_my_led_ind;
  reg [1-1:0] M_my_led_show_hint;
  led_matrix_controller_2 my_led (
    .game(M_my_led_game),
    .hint(M_my_led_hint),
    .step(M_my_led_step),
    .ind(M_my_led_ind),
    .show_hint(M_my_led_show_hint),
    .pina(M_my_led_pina),
    .pinb(M_my_led_pinb)
  );
  
  wire [4-1:0] M_my_keypad_pinr;
  wire [1-1:0] M_my_keypad_move;
  wire [1-1:0] M_my_keypad_restart_game;
  wire [1-1:0] M_my_keypad_show_hint;
  reg [2-1:0] M_my_keypad_ind;
  reg [4-1:0] M_my_keypad_pin;
  keypad_controller_3 my_keypad (
    .ind(M_my_keypad_ind),
    .pin(M_my_keypad_pin),
    .pinr(M_my_keypad_pinr),
    .move(M_my_keypad_move),
    .restart_game(M_my_keypad_restart_game),
    .show_hint(M_my_keypad_show_hint)
  );
  
  localparam INIT_state = 2'd0;
  localparam PLAY_state = 2'd1;
  localparam FIN_state = 2'd2;
  
  reg [1:0] M_state_d, M_state_q = INIT_state;
  wire [6-1:0] M_ctr_value;
  counter_4 ctr (
    .clk(clk),
    .rst(rst),
    .value(M_ctr_value)
  );
  wire [2-1:0] M_ktr_value;
  counter_5 ktr (
    .clk(clk),
    .rst(rst),
    .value(M_ktr_value)
  );
  
  always @* begin
    M_state_d = M_state_q;
    M_hint_d = M_hint_q;
    M_game_d = M_game_q;
    M_step_d = M_step_q;
    M_move_d = M_move_q;
    
    mask[0+11-:12] = 12'hc80;
    mask[12+11-:12] = 12'he40;
    mask[24+11-:12] = 12'h720;
    mask[36+11-:12] = 12'h310;
    mask[48+11-:12] = 12'h8c8;
    mask[60+11-:12] = 12'h4e4;
    mask[72+11-:12] = 12'h272;
    mask[84+11-:12] = 12'h131;
    mask[96+11-:12] = 12'h08c;
    mask[108+11-:12] = 12'h04e;
    mask[120+11-:12] = 12'h027;
    mask[132+11-:12] = 12'h013;
    M_my_updater_mask = mask;
    M_my_updater_hint = M_hint_q;
    M_my_updater_move = 6'h2a;
    M_my_updater_game = M_game_q;
    pina = 1'h0;
    pinb = 1'h0;
    pind = 1'h0;
    M_my_keypad_pin = pinc;
    M_my_keypad_ind = M_ktr_value;
    M_my_led_game[0+3-:4] = M_game_q[8+3-:4];
    M_my_led_game[4+3-:4] = M_game_q[4+3-:4];
    M_my_led_game[8+3-:4] = M_game_q[0+3-:4];
    M_my_led_hint[0+3-:4] = M_hint_q[8+3-:4];
    M_my_led_hint[4+3-:4] = M_hint_q[4+3-:4];
    M_my_led_hint[8+3-:4] = M_hint_q[0+3-:4];
    M_my_led_step = M_step_q;
    M_my_led_ind = M_ctr_value;
    M_my_led_show_hint = M_my_keypad_show_hint;
    
    case (M_state_q)
      INIT_state: begin
        M_game_d = 12'h274;
        M_hint_d = 12'h6b9;
        M_move_d = 6'h2a;
        M_my_updater_hint = 12'h6b9;
        M_my_updater_move = 6'h2a;
        M_my_updater_game = 12'h274;
        M_step_d = 1'h0;
        M_state_d = PLAY_state;
      end
      PLAY_state: begin
        M_move_d = M_my_keypad_move;
        M_step_d = M_step_q + 1'h1;
        M_my_updater_hint = M_hint_q;
        M_my_updater_move = M_move_q;
        M_my_updater_game = M_game_q;
        M_game_d = M_my_updater_new_game;
        M_hint_d = M_my_updater_new_hint;
        pina = M_my_led_pina;
        pinb = M_my_led_pinb;
        if (M_my_updater_new_hint == 1'h0) begin
          M_state_d = FIN_state;
        end
        if (M_my_keypad_restart_game == 1'h1) begin
          M_state_d = INIT_state;
        end
      end
      FIN_state: begin
        if (M_my_keypad_move != 6'h2a) begin
          M_state_d = INIT_state;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_step_q <= 1'h0;
    end else begin
      M_step_q <= M_step_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_game_q <= 1'h0;
    end else begin
      M_game_q <= M_game_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_hint_q <= 1'h0;
    end else begin
      M_hint_q <= M_hint_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_move_q <= 1'h0;
    end else begin
      M_move_q <= M_move_d;
    end
  end
  
endmodule
